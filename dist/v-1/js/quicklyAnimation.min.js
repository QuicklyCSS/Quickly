/* /////////////////////////////////////////////////// */
/* © 2024 Quickly CSS GRID Versión Oficial 1.1.0       */
/* JS minimizado                                       */
/* Por Alex Osses                                      */
/* Documentación https://quicklycss.github.io/Quickly/ */
/* /////////////////////////////////////////////////// */

document.addEventListener("DOMContentLoaded",function(){const getElements=(selector)=>{return Array.from(document.querySelectorAll(selector)).map((element)=>({node:element,isActive:!1,position:calculatePosition(element),}))};const calculatePosition=(element)=>{let top=0;let left=0;const{tagName}=element;while(element&&!isNaN(element.offsetLeft)&&!isNaN(element.offsetTop)){top+=element.offsetTop-(tagName!=="BODY"?element.scrollTop:0);left+=element.offsetLeft-(tagName!=="BODY"?element.scrollLeft:0);element=element.offsetParent}
return{top,left}};const elementsR=getElements("[data-Qy-r]");const elementsRb=getElements("[data-Qy-rb]");const observerIn=new IntersectionObserver((entries)=>{entries.forEach((entry)=>{if(entry.isIntersecting){entry.target.classList.add("active");const element=elementsR.find((el)=>el.node===entry.target);if(element){element.isActive=!0}}else if(!entry.isIntersecting){const element=elementsR.find((el)=>el.node===entry.target);if(element){setTimeout(()=>{entry.target.classList.remove("active");element.isActive=!1},100)}}})},{threshold:0.1});const observerOut=new IntersectionObserver((entries)=>{entries.forEach((entry)=>{const element=elementsRb.find((el)=>el.node===entry.target);if(entry.isIntersecting&&element&&!element.isActive){setTimeout(()=>{entry.target.classList.add("active");element.isActive=!0},100)}else if(!entry.isIntersecting&&element&&entry.boundingClientRect.top>0){setTimeout(()=>{entry.target.classList.remove("active");element.isActive=!1},100)}})},{threshold:0.2});elementsR.forEach((element)=>{observerIn.observe(element.node)});elementsRb.forEach((element)=>{observerOut.observe(element.node)})})